{
  "_args": [
    [
      {
        "raw": "utest@0.0.6",
        "scope": null,
        "escapedName": "utest",
        "name": "utest",
        "rawSpec": "0.0.6",
        "spec": "0.0.6",
        "type": "version"
      },
      "C:\\Users\\ahmad\\Desktop\\Opgaver\\Node_AR_Drone\\node_modules\\ar-drone"
    ]
  ],
  "_defaultsLoaded": true,
  "_engineSupported": true,
  "_from": "utest@0.0.6",
  "_id": "utest@0.0.6",
  "_inCache": true,
  "_location": "/utest",
  "_nodeVersion": "v0.6.11",
  "_npmUser": {
    "name": "felixge",
    "email": "felix@debuggable.com"
  },
  "_npmVersion": "1.1.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "utest@0.0.6",
    "scope": null,
    "escapedName": "utest",
    "name": "utest",
    "rawSpec": "0.0.6",
    "spec": "0.0.6",
    "type": "version"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/utest/-/utest-0.0.6.tgz",
  "_shasum": "08e6d06b7fe85bc553bd6ea831bc760450b38b4f",
  "_shrinkwrap": null,
  "_spec": "utest@0.0.6",
  "_where": "C:\\Users\\ahmad\\Desktop\\Opgaver\\Node_AR_Drone\\node_modules\\ar-drone",
  "author": {
    "name": "Felix Geisend√∂rfer",
    "email": "felix@debuggable.com",
    "url": "http://debuggable.com/"
  },
  "dependencies": {},
  "description": "The minimal unit testing library.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "08e6d06b7fe85bc553bd6ea831bc760450b38b4f",
    "tarball": "https://registry.npmjs.org/utest/-/utest-0.0.6.tgz"
  },
  "engines": {
    "node": "*"
  },
  "homepage": "https://github.com/felixge/node-utest",
  "main": "./index",
  "maintainers": [
    {
      "name": "felixge",
      "email": "felix@debuggable.com"
    }
  ],
  "name": "utest",
  "optionalDependencies": {},
  "readme": "# utest\n\n[![Build Status](https://secure.travis-ci.org/felixge/node-utest.png)](http://travis-ci.org/felixge/node-utest)\n\nThe minimal unit testing library.\n\n## Why yet another test library?\n\nI wanted something simple, that just does unit tests (no async) and where each\ntest is a standalone UNIX program. Now it exists.\n\n## How do I run async tests?\n\nCurrently there is only one sane way: Do not use a framework. Instead use one\nfile per test.\n\nIf that becomes an issue, you should write more unit tests. (It is not a unit\ntest if it does I/O).\n\n## Install\n\n```\nnpm install utest\n```\n\n## Usage\n\nRunning a test with utest is very simple:\n\n```js\nvar test   = require('utest');\nvar assert = require('assert');\n\ntest('Number#toFixed', {\n  'returns a string': function() {\n    assert.equal(typeof (5).toFixed(), 'string');\n  },\n\n  'takes number of decimal places': function() {\n    assert.equal((5).toFixed(1), '5.0');\n  },\n\n  'does not round': function() {\n    assert.equal((5.55).toFixed(1), '5.5');\n  },\n});\n```\n\nIt is also possible to define a before/after method:\n\n```js\nvar test   = require('utest');\nvar assert = require('assert');\n\ntest('Date', {\n  before: function() {\n    this.date = new Date;\n  },\n\n  after: function() {\n    this.date = null;\n  },\n\n  'lets you manipulate the year': function() {\n    this.date.setYear(2012);\n    assert.equal(this.date.getFullYear(), 2012);\n  },\n\n  'can be coerced into a number': function() {\n    assert.equal(typeof +this.date, 'number');\n  },\n});\n```\n\nLast but not least, you can run individual tests by prefixing them with an\nexclamation mark. This is useful when putting debug statements into the subject\nunder test:\n\n```js\nvar test   = require('utest');\nvar assert = require('assert');\n\ntest('MyTest', {\n  '!will be executed': function() {\n    // ...\n  },\n\n  'will not be exectuted': function() {\n    // ...\n  },\n});\n```\n\n## Future Features\n\nI want to keep this library as minimal as possible, but I do consider the\naddition of the following features:\n\n* Nested test cases\n* TAP output (if TAP=1 in the environment, switch to TapReporter class)\n* Leak detection (automatically add a final test that fails if there are global\n  leaks).\n\n## License\n\nThis module is licensed under the MIT license.\n",
  "repository": {
    "url": ""
  },
  "scripts": {
    "test": "make test"
  },
  "version": "0.0.6"
}
